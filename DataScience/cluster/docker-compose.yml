version: "3.5"

services:
  namenode: #Master (metadata/chunk)
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.1.2-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    networks:
      cscourse:
        ipv4_address: 172.200.0.2

  datanode1: #Slave1
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.1.2-java8
    container_name: datanode1
    restart: always
    ports:
      - 9864:9864
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
    networks:
      cscourse:
        ipv4_address: 172.200.0.3

  datanode2: #Slave2
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.1.2-java8
    container_name: datanode2
    restart: always
    ports:
      - 9865:9864
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
    networks:
      cscourse:
        ipv4_address: 172.200.0.4

  datanode3: #Slave3
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.1.2-java8
    container_name: datanode3
    restart: always
    ports:
      - 9866:9864
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
    networks:
      cscourse:
        ipv4_address: 172.200.0.5

  # resourcemanager: #Yarn
  #   image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.1.2-java8
  #   container_name: resourcemanager
  #   ports:
  #     - 8088:8088
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864"
  #   env_file:
  #     - ./hadoop.env
  #   networks:
  #     cscourse:
  #       ipv4_address: 172.200.0.6
  # nodemanager: #Node Orchestrator (for containers)
  #   image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.1.2-java8
  #   container_name: nodemanager
  #   ports:
  #     - 8042:8042
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864 resourcemanager:8088"
  #   env_file:
  #     - ./hadoop.env
  #   networks:
  #     cscourse:
  #       ipv4_address: 172.200.0.7
  # historyserver: #Job Store
  #   image: bde2020/hadoop-historyserver:2.0.0-hadoop3.1.2-java8
  #   container_name: historyserver
  #   ports:
  #     - 8188:8188
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864 resourcemanager:8088"
  #   volumes:
  #     - hadoop_historyserver:/hadoop/yarn/timeline
  #   env_file:
  #     - ./hadoop.env
  #   networks:
  #     cscourse:
  #       ipv4_address: 172.200.0.8
  # spark-master:
  #   image: bde2020/spark-master:2.4.4-hadoop2.7
  #   container_name: spark-master
  #   ports:
  #     - "8080:8080"
  #     - "7077:7077"
  #   environment:
  #     - INIT_DAEMON_STEP=setup_spark
  #   networks:
  #     cscourse:
  #       ipv4_address: 172.200.0.9
  # spark-worker-1:
  #   image: bde2020/spark-worker:2.4.4-hadoop2.7
  #   container_name: spark-worker-1
  #   depends_on:
  #     - spark-master
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - "SPARK_MASTER=spark://spark-master:7077"
  #   networks:
  #     cscourse:
  #       ipv4_address: 172.200.0.10

networks:
  cscourse:
    name: hadoop
    ipam:
      config:
        - subnet: 172.200.0.0/24

volumes:
  hadoop_namenode:
    name: namenode
  hadoop_datanode1:
    name: datanode1
  hadoop_datanode2:
    name: datanode2
  hadoop_datanode3:
    name: datanode3
  hadoop_historyserver:
    name: historyserver
